{"version":3,"file":"test-images-CdV0ttWy.js","sources":["../../../../node_modules/@nuxt/image/dist/runtime/components/NuxtPicture.vue","../../../../components/OptimizedImage.vue","../../../../pages/test-images.vue"],"sourcesContent":["<template>\n  <picture>\n    <source\n      v-for=\"source in sources.slice(0, -1)\"\n      :key=\"source.src\"\n      :type=\"source.type\"\n      :sizes=\"source.sizes\"\n      :srcset=\"source.srcset\"\n    >\n\n    <img\n      v-if=\"lastSource\"\n      ref=\"imgEl\"\n      v-bind=\"{\n        ...baseAttrs,\n        ...(isServer ? { onerror: 'this.setAttribute(\\'data-error\\', 1)' } : {}),\n        ...imgAttrs,\n      }\"\n      :src=\"lastSource.src\"\n      :sizes=\"lastSource.sizes\"\n      :srcset=\"lastSource.srcset\"\n    >\n  </picture>\n</template>\n\n<script setup lang=\"ts\">\nimport type { Head } from '@unhead/vue'\n\nimport { computed, onMounted, ref, useAttrs } from 'vue'\n\nimport { prerenderStaticImages } from '../utils/prerender'\nimport { markFeatureUsage } from '../utils/performance'\nimport { getFileExtension } from '../utils'\nimport { useImage } from '../composables'\nimport { useBaseImage, pictureProps, baseImageProps } from './_base'\n\nimport { useHead } from '#imports'\nimport { useNuxtApp } from '#app/nuxt'\n\nconst props = defineProps(pictureProps)\n\nconst attrs = useAttrs()\n\nconst emit = defineEmits<{\n  (event: 'load', payload: Event): unknown\n  (event: 'error', payload: string | Event): unknown\n}>()\n\nconst isServer = import.meta.server\n\nconst $img = useImage()\n\nconst { attrs: baseAttrs, options: baseOptions, modifiers: baseModifiers } = useBaseImage(props)\n\nconst originalFormat = computed(() => getFileExtension(props.src))\n\nconst isTransparent = computed(() => ['png', 'webp', 'gif', 'svg'].includes(originalFormat.value))\n\nconst legacyFormat = computed(() => {\n  if (props.legacyFormat) {\n    return props.legacyFormat\n  }\n\n  return isTransparent.value ? 'png' : 'jpeg'\n})\n\ntype Source = { src?: string, srcset?: string, type?: string, sizes?: string }\n\nconst sources = computed<Source[]>(() => {\n  const formats = props.format?.split(',') || (originalFormat.value === 'svg' ? ['svg'] : ($img.options.format?.length ? [...$img.options.format] : ['webp']))\n\n  if (formats[0] === 'svg') {\n    return [{ src: props.src! }]\n  }\n\n  if (!formats.includes(legacyFormat.value)) {\n    formats.push(legacyFormat.value)\n  }\n  else {\n    formats.splice(formats.indexOf(legacyFormat.value), 1)\n    formats.push(legacyFormat.value)\n  }\n\n  return formats.map((format) => {\n    const { srcset, sizes, src } = $img.getSizes(props.src!, {\n      ...baseOptions.value,\n      sizes: props.sizes || $img.options.screens,\n      densities: props.densities,\n      modifiers: { ...baseModifiers.value, format },\n    })\n\n    return { src, type: `image/${format}`, sizes, srcset }\n  })\n})\n\nconst lastSource = computed(() => sources.value[sources.value.length - 1])\n\nif (import.meta.server && props.preload) {\n  useHead({ link: () => {\n    const firstSource = sources.value[0]\n    if (!firstSource) {\n      return []\n    }\n\n    const link: NonNullable<Head['link']>[number] = {\n      rel: 'preload',\n      as: 'image',\n      imagesrcset: firstSource.srcset,\n      nonce: props.nonce,\n      ...(typeof props.preload !== 'boolean' && props.preload?.fetchPriority\n        ? { fetchpriority: props.preload.fetchPriority }\n        : {}),\n    }\n\n    if (sources.value?.[0]?.sizes) {\n      link.imagesizes = sources.value[0].sizes\n    }\n    return [link]\n  } })\n}\n\n// Only passdown supported <image> attributes\nconst imgAttrs = computed(() => {\n  const result: Record<string, string | unknown> = { ...props.imgAttrs, 'data-nuxt-pic': '' }\n  for (const key in attrs) {\n    if (key in baseImageProps && !(key in result)) {\n      result[key] = attrs[key]\n    }\n  }\n  return result\n})\n\nconst imgEl = ref<HTMLImageElement>()\n\n// Prerender static images\nif (import.meta.server && import.meta.prerender) {\n  for (const src of sources.value) {\n    prerenderStaticImages(src.src, src.srcset)\n  }\n}\n\nconst nuxtApp = useNuxtApp()\nconst initialLoad = nuxtApp.isHydrating\n\nonMounted(() => {\n  if (!imgEl.value) {\n    return\n  }\n\n  if (imgEl.value.complete && initialLoad) {\n    if (imgEl.value.getAttribute('data-error')) {\n      emit('error', new Event('error'))\n    }\n    else {\n      emit('load', new Event('load'))\n    }\n  }\n\n  imgEl.value.onload = (event) => {\n    emit('load', event)\n  }\n\n  imgEl.value.onerror = (event) => {\n    emit('error', event)\n  }\n\n  markFeatureUsage('nuxt-picture')\n})\n</script>\n\n<script lang=\"ts\">\nexport { pictureProps } from './_base'\n</script>\n","<template>\n  <div class=\"optimized-image-container\" :style=\"containerStyle\">\n    <!-- 占位符 -->\n    <div \n      v-if=\"!imageLoaded && placeholder\" \n      class=\"image-placeholder animate-pulse bg-gray-200\"\n      :style=\"placeholderStyle\"\n    >\n      <div class=\"flex items-center justify-center h-full\">\n        <svg class=\"w-8 h-8 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\"></path>\n        </svg>\n      </div>\n    </div>\n    \n    <!-- 使用NuxtPicture获得最佳性能和兼容性 -->\n    <NuxtPicture\n      v-if=\"usePicture\"\n      ref=\"imageRef\"\n      :src=\"src\"\n      :alt=\"alt\"\n      :width=\"width\"\n      :height=\"height\"\n      :quality=\"quality\"\n      :format=\"formats\"\n      :loading=\"loading\"\n      :sizes=\"responsiveSizes\"\n      :preset=\"preset\"\n      :class=\"imageClass\"\n      :style=\"imageStyle\"\n      :placeholder=\"placeholderSrc\"\n      @load=\"onImageLoad\"\n      @error=\"onImageError\"\n    />\n    \n    <!-- 或使用NuxtImg进行基础优化 -->\n    <NuxtImg\n      v-else\n      ref=\"imageRef\"\n      :src=\"src\"\n      :alt=\"alt\"\n      :width=\"width\"\n      :height=\"height\"\n      :quality=\"quality\"\n      :format=\"preferredFormat\"\n      :loading=\"loading\"\n      :sizes=\"responsiveSizes\"\n      :preset=\"preset\"\n      :class=\"imageClass\"\n      :style=\"imageStyle\"\n      :placeholder=\"placeholderSrc\"\n      @load=\"onImageLoad\"\n      @error=\"onImageError\"\n    />\n    \n    <!-- 错误状态 -->\n    <div \n      v-if=\"imageError\" \n      class=\"image-error bg-gray-100 border-2 border-dashed border-gray-300 flex items-center justify-center\"\n      :style=\"placeholderStyle\"\n    >\n      <div class=\"text-center text-gray-500\">\n        <svg class=\"w-8 h-8 mx-auto mb-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.082 16.5c-.77.833.192 2.5 1.732 2.5z\"></path>\n        </svg>\n        <p class=\"text-sm\">图片加载失败</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, defineProps } from 'vue'\n\n// Props定义 - 增强版支持@nuxt/image所有功能\nconst props = defineProps({\n  src: {\n    type: String,\n    required: true\n  },\n  alt: {\n    type: String,\n    default: ''\n  },\n  width: {\n    type: [Number, String],\n    default: null\n  },\n  height: {\n    type: [Number, String],\n    default: null\n  },\n  loading: {\n    type: String,\n    default: 'lazy',\n    validator: (value) => ['lazy', 'eager'].includes(value)\n  },\n  quality: {\n    type: Number,\n    default: 85,\n    validator: (value) => value >= 1 && value <= 100\n  },\n  format: {\n    type: [String, Array],\n    default: 'webp',\n    validator: (value) => {\n      const validFormats = ['webp', 'jpg', 'jpeg', 'png', 'avif', 'gif']\n      if (Array.isArray(value)) {\n        return value.every(f => validFormats.includes(f))\n      }\n      return validFormats.includes(value)\n    }\n  },\n  fit: {\n    type: String,\n    default: 'cover',\n    validator: (value) => ['cover', 'contain', 'fill', 'inside', 'outside'].includes(value)\n  },\n  placeholder: {\n    type: Boolean,\n    default: true\n  },\n  // 预设配置：hero, project, photo, thumbnail\n  preset: {\n    type: String,\n    default: '',\n    validator: (value) => ['', 'hero', 'project', 'photo', 'thumbnail'].includes(value)\n  },\n  // 响应式尺寸\n  sizes: {\n    type: String,\n    default: ''\n  },\n  // 是否使用Picture元素（推荐用于关键图片）\n  usePicture: {\n    type: Boolean,\n    default: false\n  },\n  // 模糊占位符\n  blur: {\n    type: [Boolean, Number],\n    default: false\n  },\n  class: {\n    type: [String, Array, Object],\n    default: ''\n  }\n})\n\n// 响应式状态\nconst imageLoaded = ref(false)\nconst imageError = ref(false)\nconst imageRef = ref(null)\n\n// 计算属性\nconst containerStyle = computed(() => {\n  const styles = {}\n  if (props.width) styles.width = typeof props.width === 'number' ? `${props.width}px` : props.width\n  if (props.height) styles.height = typeof props.height === 'number' ? `${props.height}px` : props.height\n  return styles\n})\n\nconst placeholderStyle = computed(() => {\n  const styles = {\n    width: '100%',\n    height: '100%'\n  }\n  if (props.width && props.height) {\n    styles.aspectRatio = `${props.width} / ${props.height}`\n  }\n  return styles\n})\n\nconst imageClass = computed(() => {\n  const classes = ['optimized-image', 'transition-opacity', 'duration-300']\n  \n  if (imageLoaded.value) {\n    classes.push('opacity-100')\n  } else {\n    classes.push('opacity-0')\n  }\n  \n  // 添加用户自定义类\n  if (props.class) {\n    if (typeof props.class === 'string') {\n      classes.push(props.class)\n    } else if (Array.isArray(props.class)) {\n      classes.push(...props.class)\n    } else {\n      Object.keys(props.class).forEach(key => {\n        if (props.class[key]) classes.push(key)\n      })\n    }\n  }\n  \n  return classes.join(' ')\n})\n\nconst imageStyle = computed(() => {\n  const styles = {\n    objectFit: props.fit,\n    width: '100%',\n    height: '100%'\n  }\n  \n  if (!imageLoaded.value && props.placeholder) {\n    styles.position = 'absolute'\n    styles.top = '0'\n    styles.left = '0'\n  }\n  \n  return styles\n})\n\n// 格式配置\nconst preferredFormat = computed(() => {\n  return Array.isArray(props.format) ? props.format[0] : props.format\n})\n\nconst formats = computed(() => {\n  if (Array.isArray(props.format)) {\n    return props.format\n  }\n  // 为Picture元素提供多种格式以获得最佳兼容性\n  return ['webp', props.format].filter((f, i, arr) => arr.indexOf(f) === i)\n})\n\n// 响应式尺寸配置\nconst responsiveSizes = computed(() => {\n  if (props.sizes) return props.sizes\n  \n  // 根据预设自动生成sizes\n  switch (props.preset) {\n    case 'hero':\n      return '100vw'\n    case 'project':\n      return '(max-width: 768px) 100vw, (max-width: 1024px) 50vw, 33vw'\n    case 'photo':\n      return '(max-width: 768px) 100vw, (max-width: 1024px) 50vw, 33vw'\n    case 'thumbnail':\n      return '(max-width: 768px) 50vw, 25vw'\n    default:\n      return props.width ? `${props.width}px` : '100vw'\n  }\n})\n\n// 占位符图片\nconst placeholderSrc = computed(() => {\n  if (!props.blur) return undefined\n  \n  // 生成模糊占位符\n  const blurAmount = typeof props.blur === 'number' ? props.blur : 10\n  return `${props.src}?blur=${blurAmount}&quality=20&width=100`\n})\n\n// 事件处理\nconst onImageLoad = () => {\n  imageLoaded.value = true\n  imageError.value = false\n}\n\nconst onImageError = () => {\n  imageLoaded.value = false\n  imageError.value = true\n}\n</script>\n\n<style scoped>\n.optimized-image-container {\n  position: relative;\n  display: inline-block;\n  overflow: hidden;\n}\n\n.image-placeholder {\n  border-radius: inherit;\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 1;\n}\n\n.optimized-image {\n  border-radius: inherit;\n  position: relative;\n  z-index: 2;\n}\n\n.image-error {\n  border-radius: inherit;\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 3;\n}\n\n/* 响应式图片 */\n.optimized-image {\n  max-width: 100%;\n  height: auto;\n}\n\n/* 渐入动画 */\n.optimized-image {\n  transition: opacity 0.3s ease-in-out;\n}\n\n/* 为摄影作品优化的样式 */\n.optimized-image[data-preset=\"photo\"] {\n  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\n}\n\n/* 项目截图样式 */\n.optimized-image[data-preset=\"project\"] {\n  border: 1px solid rgba(0, 0, 0, 0.1);\n}\n\n/* Hero图片样式 */\n.optimized-image[data-preset=\"hero\"] {\n  object-position: center;\n}\n</style> ","<template>\n  <div class=\"container mx-auto px-4 py-8\">\n    <h1 class=\"text-3xl font-bold mb-8 text-center\">@nuxt/image 功能测试</h1>\n    \n    <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n      <!-- 基础NuxtImg测试 -->\n      <div class=\"space-y-4\">\n        <h2 class=\"text-xl font-semibold\">基础NuxtImg</h2>\n        <NuxtImg\n          src=\"/images/hero/hero-bg.jpg\"\n          alt=\"Hero背景测试\"\n          width=\"400\"\n          height=\"300\"\n          format=\"webp\"\n          quality=\"85\"\n          class=\"rounded-lg shadow-md\"\n        />\n      </div>\n      \n      <!-- NuxtPicture测试 -->\n      <div class=\"space-y-4\">\n        <h2 class=\"text-xl font-semibold\">NuxtPicture优化</h2>\n        <NuxtPicture\n          src=\"/images/projects/project-1.jpg\"\n          alt=\"项目图片测试\"\n          width=\"400\"\n          height=\"300\"\n          format=\"webp\"\n          quality=\"90\"\n          class=\"rounded-lg shadow-md\"\n        />\n      </div>\n      \n      <!-- OptimizedImage组件测试 -->\n      <div class=\"space-y-4\">\n        <h2 class=\"text-xl font-semibold\">OptimizedImage组件</h2>\n        <OptimizedImage\n          src=\"/images/photography/photo-1.jpg\"\n          alt=\"摄影作品测试\"\n          preset=\"photo\"\n          width=\"400\"\n          height=\"300\"\n          :blur=\"true\"\n          class=\"rounded-lg shadow-md\"\n        />\n      </div>\n      \n      <!-- 预设测试 -->\n      <div class=\"space-y-4\">\n        <h2 class=\"text-xl font-semibold\">Hero预设</h2>\n        <OptimizedImage\n          src=\"/images/hero/hero-project.jpg\"\n          alt=\"Hero项目测试\"\n          preset=\"hero\"\n          width=\"400\"\n          height=\"225\"\n          class=\"rounded-lg shadow-md\"\n        />\n      </div>\n      \n      <!-- 项目预设测试 -->\n      <div class=\"space-y-4\">\n        <h2 class=\"text-xl font-semibold\">项目预设</h2>\n        <OptimizedImage\n          src=\"/images/projects/project-2.jpg\"\n          alt=\"项目预设测试\"\n          preset=\"project\"\n          width=\"400\"\n          height=\"300\"\n          class=\"rounded-lg shadow-md\"\n        />\n      </div>\n      \n      <!-- 缩略图预设测试 -->\n      <div class=\"space-y-4\">\n        <h2 class=\"text-xl font-semibold\">缩略图预设</h2>\n        <OptimizedImage\n          src=\"/images/photography/photo-2.jpg\"\n          alt=\"缩略图测试\"\n          preset=\"thumbnail\"\n          width=\"200\"\n          height=\"150\"\n          class=\"rounded-lg shadow-md\"\n        />\n      </div>\n    </div>\n    \n    <!-- Sharp功能测试 -->\n    <div class=\"mt-12\">\n      <h2 class=\"text-2xl font-semibold mb-6\">Sharp图片处理测试</h2>\n      <div class=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n        <!-- 不同格式测试 -->\n        <div class=\"space-y-2\">\n          <h3 class=\"font-medium\">WebP格式</h3>\n          <NuxtImg\n            src=\"/images/about/profile.jpg\"\n            alt=\"WebP测试\"\n            format=\"webp\"\n            width=\"300\"\n            height=\"300\"\n            class=\"rounded-lg\"\n          />\n        </div>\n        \n        <div class=\"space-y-2\">\n          <h3 class=\"font-medium\">JPEG格式</h3>\n          <NuxtImg\n            src=\"/images/about/profile.jpg\"\n            alt=\"JPEG测试\"\n            format=\"jpg\"\n            width=\"300\"\n            height=\"300\"\n            class=\"rounded-lg\"\n          />\n        </div>\n        \n        <div class=\"space-y-2\">\n          <h3 class=\"font-medium\">PNG格式</h3>\n          <NuxtImg\n            src=\"/images/about/profile.jpg\"\n            alt=\"PNG测试\"\n            format=\"png\"\n            width=\"300\"\n            height=\"300\"\n            class=\"rounded-lg\"\n          />\n        </div>\n      </div>\n    </div>\n    \n    <!-- 响应式测试 -->\n    <div class=\"mt-12\">\n      <h2 class=\"text-2xl font-semibold mb-6\">响应式图片测试</h2>\n      <OptimizedImage\n        src=\"/images/hero/landscape.jpg\"\n        alt=\"响应式图片测试\"\n        :use-picture=\"true\"\n        sizes=\"(max-width: 768px) 100vw, (max-width: 1024px) 50vw, 33vw\"\n        class=\"w-full max-w-4xl mx-auto rounded-lg shadow-lg\"\n      />\n    </div>\n    \n    <!-- 功能状态显示 -->\n    <div class=\"mt-12 p-6 bg-gray-50 rounded-lg\">\n      <h2 class=\"text-xl font-semibold mb-4\">功能状态检查</h2>\n      <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\n        <div class=\"space-y-2\">\n          <div class=\"flex justify-between\">\n            <span>@nuxt/image:</span>\n            <span class=\"text-green-600 font-medium\">✅ 已安装</span>\n          </div>\n          <div class=\"flex justify-between\">\n            <span>Sharp:</span>\n            <span class=\"text-green-600 font-medium\">✅ 已安装</span>\n          </div>\n          <div class=\"flex justify-between\">\n            <span>WebP支持:</span>\n            <span class=\"text-green-600 font-medium\">✅ 支持</span>\n          </div>\n        </div>\n        <div class=\"space-y-2\">\n          <div class=\"flex justify-between\">\n            <span>图片优化:</span>\n            <span class=\"text-green-600 font-medium\">✅ 启用</span>\n          </div>\n          <div class=\"flex justify-between\">\n            <span>响应式图片:</span>\n            <span class=\"text-green-600 font-medium\">✅ 启用</span>\n          </div>\n          <div class=\"flex justify-between\">\n            <span>预设配置:</span>\n            <span class=\"text-green-600 font-medium\">✅ 配置完成</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\n// SEO配置\nuseHead({\n  title: '@nuxt/image 功能测试',\n  meta: [\n    { name: 'description', content: '测试@nuxt/image和Sharp图片处理功能' }\n  ]\n})\n</script>\n\n<style scoped>\n/* 测试页面样式 */\n.container {\n  max-width: 1200px;\n}\n\n/* 确保图片正确显示 */\nimg {\n  max-width: 100%;\n  height: auto;\n}\n</style> "],"names":["_unref","_ssrRenderAttrs","_mergeProps"],"mappings":"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","x_google_ignoreList":[0]}