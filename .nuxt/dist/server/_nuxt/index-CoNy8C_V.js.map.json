{"file":"index-CoNy8C_V.js","mappings":";;;;;;;;;;;;;;;AAwBA,MAAM,cAAc;;;;;AACpB,UAAM,eAAe,IAAI,CAAC,GAAG,WAAW,CAAC;AACzC,UAAM,eAAe,IAAI,IAAI,MAAM,YAAY,MAAM,EAAE,KAAK,KAAK,CAAC;AACzC,QAAI,KAAK;;AA1B3B,YAAA,OAAAA,eAAAC,WAAA,EAAA,OAAM,+BAA2B,MAAA,CAAA,CAAA,uHAAA;oBAIN,aAAA,OAAY,CAA5B,MAAMC,WAAK;;UAGgB,WAAA,aAAA,MAAaA,MAAK;AAAA,6BAAmCA,SAAK;AAAA,QAAA,uDAK1F,IAAI;;;;;;;;;;;;;ACbsC,MAAA,aAAe,gBAAgB,yBAAyB;ACAxD,MAAA,aAAe,gBAAgB,wBAAwB;ACAvD,MAAA,aAAe,gBAAgB,0BAA0B;;;;;ACmEjG,QAAI,IAAI;AACR,QAAI,IAAI;AAKvB,YAAQ;AAAA,MACN,OAAO;AAAA,MACP,MAAM;AAAA,QACJ;AAAA,UACE,MAAM;AAAA,UACN,SAAS;AAAA,QAAA;AAAA,MACX;AAAA,IACF,CACD;;;;AAhFM,YAAA,OAAAF,eAAAC,WAAA,EAAA,OAAM,cAAU,MAAA,CAAA,CAAA,mBAAA;;yMAmBLE,cAAA,OAAA,UAA6B,8CAC7BA,cAAA,OAAA,UAA4B,+JAW5BA,cAAA,OAAA,UAA8B;;;;;;;;;;;;;","names":["_ssrRenderAttrs","_mergeProps","index","_ssrRenderAttr"],"sources":["../../../../components/WelcomeMessage.vue","../../../../virtual:public?%2Fvideos%2Fhero-video.webm","../../../../virtual:public?%2Fvideos%2Fhero-video.mp4","../../../../virtual:public?%2Fvideos%2Fhero-video2.webm","../../../../pages/index.vue"],"sourcesContent":["<template>\r\n  <div class=\"welcome-message-container\">\r\n    <div class=\"typewriter-container\">\r\n      <div class=\"welcome-text\">\r\n        <span \r\n          v-for=\"(char, index) in welcomeChars\" \r\n          :key=\"`char-${index}`\"\r\n          class=\"welcome-char\"\r\n          :class=\"{ \r\n            'visible': visibleChars[index],\r\n            'chinese-elegant': index < 4\r\n          }\"\r\n        >\r\n          {{ char }}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, onUnmounted, watch, nextTick } from 'vue'\r\n\r\n// 欢迎语文字\r\nconst welcomeText = '欢迎访问imranjan.cn'\r\nconst welcomeChars = ref([...welcomeText])\r\nconst visibleChars = ref(new Array(welcomeText.length).fill(false))\r\nconst animationRunning = ref(false)\r\n\r\n// 启动打字机动画\r\nconst startTypingAnimation = () => {\r\n  if (animationRunning.value) return\r\n  \r\n  animationRunning.value = true\r\n  \r\n  // 重置所有字符\r\n  visibleChars.value = new Array(welcomeText.length).fill(false)\r\n  \r\n  // 逐字显示动画\r\n  welcomeChars.value.forEach((_, index) => {\r\n    setTimeout(() => {\r\n      visibleChars.value[index] = true\r\n      \r\n      // 最后一个字符动画完成后\r\n      if (index === welcomeChars.value.length - 1) {\r\n        setTimeout(() => {\r\n          animationRunning.value = false\r\n        }, 500)\r\n      }\r\n    }, index * 100) // 稍微加快字符间隔\r\n  })\r\n}\r\n\r\n// 页面可见性变化监听\r\nconst handleVisibilityChange = () => {\r\n  if (!document.hidden) {\r\n    setTimeout(() => {\r\n      startTypingAnimation()\r\n    }, 300)\r\n  }\r\n}\r\n\r\nonMounted(async () => {\r\n  await nextTick()\r\n  \r\n  // 等待字体加载完成再启动动画\r\n  if (document.fonts) {\r\n    await document.fonts.ready\r\n  }\r\n  \r\n  // 页面加载时启动动画 - 减少延迟\r\n  setTimeout(() => {\r\n    startTypingAnimation()\r\n  }, 200)\r\n  \r\n  // 监听页面可见性变化\r\n  document.addEventListener('visibilitychange', handleVisibilityChange)\r\n  \r\n  // 监听路由变化\r\n  const router = useRouter()\r\n  const route = useRoute()\r\n  \r\n  watch(() => route.path, (newPath) => {\r\n    if (newPath === '/') {\r\n      setTimeout(() => {\r\n        startTypingAnimation()\r\n      }, 300)\r\n    }\r\n  })\r\n})\r\n\r\nonUnmounted(() => {\r\n  document.removeEventListener('visibilitychange', handleVisibilityChange)\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.welcome-message-container {\r\n  @apply absolute inset-0 flex items-center justify-center z-20;\r\n  @apply pointer-events-none;\r\n}\r\n\r\n.typewriter-container {\r\n  @apply relative;\r\n}\r\n\r\n.welcome-text {\r\n  @apply text-center;\r\n  @apply text-3xl md:text-4xl lg:text-5xl xl:text-6xl;\r\n  @apply text-primary-orange;\r\n  /* 添加文字阴影增强可读性 */\r\n  text-shadow: \r\n    2px 2px 4px rgba(0, 0, 0, 0.7),\r\n    0 0 8px rgba(139, 69, 19, 0.4),\r\n    0 0 16px rgba(139, 69, 19, 0.2);\r\n  \r\n  line-height: 1.2;\r\n}\r\n\r\n.welcome-char {\r\n  @apply inline-block;\r\n  @apply opacity-0 transform translate-y-4;\r\n  @apply transition-all duration-200 ease-out;\r\n  @apply font-signature;\r\n  font-weight: 400;\r\n  letter-spacing: 0.02em;\r\n}\r\n\r\n.welcome-char.chinese-elegant {\r\n  @apply font-chinese-elegant;\r\n  font-weight: 400;\r\n  letter-spacing: 0.08em;\r\n  transform-origin: center;\r\n  /* 增强中文字体的曲线美感 */\r\n  font-style: italic;\r\n  text-rendering: optimizeLegibility;\r\n  /* 轻微倾斜和旋转增加曲线感 */\r\n  transform: skewY(-3deg) rotate(-1deg);\r\n}\r\n\r\n.welcome-char.visible {\r\n  @apply opacity-100 translate-y-0;\r\n  animation: typeIn 0.2s ease-out forwards;\r\n}\r\n\r\n\r\n\r\n/* 打字动画 */\r\n@keyframes typeIn {\r\n  0% {\r\n    opacity: 0;\r\n    transform: translateY(8px) scale(0.8);\r\n  }\r\n  50% {\r\n    opacity: 0.8;\r\n    transform: translateY(-2px) scale(1.05);\r\n  }\r\n  100% {\r\n    opacity: 1;\r\n    transform: translateY(0) scale(1);\r\n  }\r\n}\r\n\r\n\r\n\r\n/* 响应式调整 */\r\n@media (max-width: 1024px) {\r\n  .welcome-text {\r\n    @apply text-2xl md:text-3xl lg:text-4xl;\r\n  }\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .welcome-text {\r\n    @apply text-xl md:text-2xl;\r\n  }\r\n}\r\n\r\n@media (max-width: 480px) {\r\n  .welcome-text {\r\n    @apply text-lg;\r\n    letter-spacing: 0.01em;\r\n  }\r\n}\r\n\r\n/* 确保在视频上方显示 */\r\n.welcome-message-container {\r\n  z-index: 20;\r\n}\r\n</style> ","import { publicAssetsURL } from '#internal/nuxt/paths';export default publicAssetsURL(\"/videos/hero-video.webm\")","import { publicAssetsURL } from '#internal/nuxt/paths';export default publicAssetsURL(\"/videos/hero-video.mp4\")","import { publicAssetsURL } from '#internal/nuxt/paths';export default publicAssetsURL(\"/videos/hero-video2.webm\")","<template>\n  <div class=\"homepage\">\n    <!-- 统一头部组件 -->\n    <PageHeader />\n\n\n\n    <!-- 下半部分：宽幅视频区域 -->\n    <div class=\"video-section\">\n      <!-- 视频容器 -->\n      <div class=\"video-container\">\n        <!-- 宽幅项目展示视频 -->\n        <video\n          ref=\"video1\"\n          autoplay\n          muted\n          playsinline\n          preload=\"auto\"\n          class=\"hero-video active\"\n        >\n          <source src=\"/videos/hero-video.webm\" type=\"video/webm\">\n          <source src=\"/videos/hero-video.mp4\" type=\"video/mp4\">\n          您的浏览器不支持视频播放，请升级浏览器或使用现代浏览器访问\n        </video>\n\n        <video\n          ref=\"video2\"\n          muted\n          playsinline\n          preload=\"auto\"\n          class=\"hero-video\"\n        >\n          <source src=\"/videos/hero-video2.webm\" type=\"video/webm\">\n          您的浏览器不支持视频播放，请升级浏览器或使用现代浏览器访问\n        </video>\n\n        <!-- 欢迎语组件 -->\n        <div class=\"welcome-overlay\">\n          <WelcomeMessage />\n        </div>\n\n        <!-- 占位符已注释，视频正常播放 -->\n        <!-- <div class=\"video-placeholder\">\n          <div class=\"placeholder-content\">\n            <div class=\"placeholder-text\">\n              <h2 class=\"text-white text-2xl md:text-4xl font-clean mb-4\">\n                您的项目展示视频\n              </h2>\n              <p class=\"text-gray-300 text-lg\">\n                建议视频尺寸：1920x1080 (16:9比例)\n              </p>\n            </div>\n          </div>\n        </div> -->\n      </div>\n    </div>\n\n    <!-- 底部版权信息 -->\n    <footer class=\"bottom-copyright\">\n      <p class=\"copyright-text\">© 2025 依木热尼江·买买提明. 个人网站</p>\n    </footer>\n  </div>\n</template>\n\n<script setup>\n\n// 视频引用\nconst video1 = ref(null)\nconst video2 = ref(null)\nlet currentVideo = 1\nlet isTransitioning = false\n\n// SEO配置\nuseHead({\n  title: '首页 - 理工科学生个人网站',\n  meta: [\n    {\n      name: 'description',\n      content: '专为理工科大学生设计的个人品牌网站，展示技术项目历程、竞赛作品和摄影创作'\n    }\n  ]\n})\n\n// 切换视频函数\nconst switchVideo = async () => {\n  if (isTransitioning) return\n  isTransitioning = true\n\n  const activeVideo = currentVideo === 1 ? video1.value : video2.value\n  const nextVideo = currentVideo === 1 ? video2.value : video1.value\n\n  // 预加载下一个视频\n  if (nextVideo.readyState < 2) {\n    nextVideo.load()\n    await new Promise(resolve => {\n      nextVideo.addEventListener('loadeddata', resolve, { once: true })\n    })\n  }\n\n  // 开始淡出当前视频，淡入下一个视频\n  activeVideo.classList.remove('active')\n  nextVideo.classList.add('active')\n\n  // 播放下一个视频\n  nextVideo.currentTime = 0\n  await nextVideo.play().catch(console.error)\n\n  // 暂停当前视频\n  setTimeout(() => {\n    activeVideo.pause()\n    activeVideo.currentTime = 0\n  }, 1000) // 等待切换动画完成\n\n  // 更新当前视频索引\n  currentVideo = currentVideo === 1 ? 2 : 1\n  isTransitioning = false\n}\n\n// 防止页面滚动和视频控制\nonMounted(() => {\n  document.body.style.overflow = 'hidden'\n\n  // 初始化视频\n  const initVideo = (video) => {\n    if (!video) return\n\n    // 强制静音以确保自动播放\n    video.muted = true\n    video.preload = 'auto'\n\n    // 监听视频可以播放时设置正确的样式\n    video.addEventListener('canplay', () => {\n      if (video.classList.contains('active')) {\n        video.style.opacity = '1'\n      }\n    })\n\n    // 监听视频结束事件，切换到下一个视频\n    video.addEventListener('ended', () => {\n      switchVideo()\n    })\n\n    // 监听视频加载完成\n    video.addEventListener('loadeddata', () => {\n      if (video === video1.value && currentVideo === 1) {\n        video.play().catch(console.error)\n      }\n    })\n  }\n\n  // 初始化两个视频\n  if (video1.value) {\n    initVideo(video1.value)\n  }\n  if (video2.value) {\n    initVideo(video2.value)\n  }\n\n  // 页面可见时确保视频播放\n  document.addEventListener('visibilitychange', () => {\n    if (!document.hidden) {\n      const activeVideo = currentVideo === 1 ? video1.value : video2.value\n      if (activeVideo && activeVideo.paused) {\n        activeVideo.play().catch(console.error)\n      }\n    }\n  })\n})\n\nonUnmounted(() => {\n  document.body.style.overflow = 'auto'\n})\n\n</script>\n\n<style scoped>\n/* MrKriss精确复制布局 */\n.homepage {\n  @apply fixed inset-0 w-full h-full flex flex-col;\n}\n\n\n\n/* 下半部分：视频区域 */\n.video-section {\n  @apply flex-grow relative overflow-hidden;\n  @apply bg-gray-900; /* 黑色背景作为视频加载前的背景 */\n}\n\n.video-container {\n  @apply w-full h-full relative;\n}\n\n.hero-video {\n  @apply w-full h-full object-cover absolute inset-0;\n  /* @apply filter grayscale; 黑白效果，模仿MrKriss */\n  opacity: 0;\n  transition: opacity 1s ease-in-out;\n  z-index: 1;\n}\n\n.hero-video.active {\n  opacity: 1;\n  z-index: 2;\n}\n\n.welcome-overlay {\n  @apply absolute inset-0;\n  z-index: 10;\n  pointer-events: none;\n}\n\n.welcome-overlay > * {\n  pointer-events: auto;\n}\n\n/* 临时占位符样式 */\n.video-placeholder {\n  @apply w-full h-full relative;\n  @apply bg-gray-800; /* 深灰背景 */\n  background: linear-gradient(135deg, #1f2937 0%, #374151 50%, #1f2937 100%);\n}\n\n.placeholder-content {\n  @apply absolute inset-0 flex items-center justify-center;\n  @apply bg-black bg-opacity-40;\n}\n\n.placeholder-text {\n  @apply text-center px-8;\n}\n\n/* 底部版权 */\n.bottom-copyright {\n  @apply flex-shrink-0 w-full;\n  @apply bg-white;\n  @apply py-4;\n  height: 8vh; /* 固定高度，与上面的计算对应 */\n  @apply flex items-center justify-center;\n}\n\n.copyright-text {\n  @apply text-gray-700 text-center text-sm;\n}\n\n/* 响应式适配 */\n@media (max-width: 768px) {\n  .bottom-copyright {\n    height: 10vh; /* 移动端版权区域稍大 */\n  }\n\n  .placeholder-text h2 {\n    @apply text-xl;\n  }\n\n  .placeholder-text p {\n    @apply text-base;\n  }\n}\n\n\n\n/* 进入动画 */\n.video-container {\n  animation: fadeIn 1.5s ease-out 0.6s both;\n}\n\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n}\n</style>\n"],"version":3}